group 'com.hazebyte'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'


sourceCompatibility = 1.8

clean {
    delete "${rootDir}/out/"
}

buildscript {
    repositories {
        mavenLocal()
    }
}

allprojects {
    repositories {
        mavenLocal()
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()

    maven   {     url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'    }
    maven   {     url = 'http://maven.elmakers.com/repository/'                             }
    maven   {     url = 'https://oss.sonatype.org/content/repositories/snapshots'           }
    maven {
        name = 'placeholderapi'
        url = 'http://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

configurations {
    deployerJars
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"

    compile group: 'org.spigotmc', name: 'spigot-api', version: '1.12.1-R0.1-SNAPSHOT'
//    compile group: 'org.spigotmc', name: 'spigot-api', version: '1.8.8-R0.1-SNAPSHOT'
    compile group: 'de.slikey', name: 'EffectLib', version: '5.5'
    compile group: 'me.clip', name: 'placeholderapi', version: '2.10.3'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

if (project.hasProperty("deployRepoUrl")) {
    uploadArchives {
        repositories.mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: deployRepoUrl) {
                authentication(userName: deployRepoUsername, password: deployRepoPassword)
            }
        }
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}